<!doctype html>
<!--[if IE 9]> <html class="ie9 no-js supports-no-cookies" lang="{{ shop.locale }}"> <![endif]-->
<!--[if (gt IE 9)|!(IE)]><!--> <html class="no-js supports-no-cookies" lang="{{ shop.locale }}"> <!--<![endif]-->
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="theme-color" content="{{ settings.color_primary }}">
  <link rel="canonical" href="{{ canonical_url }}">

  {% if settings.favicon != blank %}
    <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
  {% endif %}

  {% capture seo_title %}
    {{ page_title }}
    {% if current_tags %}
      {%- assign meta_tags = current_tags | join: ', ' %} &ndash; {{ 'general.meta.tags' | t: tags: meta_tags -}}
    {% endif %}
    {% if current_page != 1 %}
      &ndash; {{ 'general.meta.page' | t: page: current_page }}
    {% endif %}
    {% unless page_title contains shop.name %}
      &ndash; {{ shop.name }}
    {% endunless %}
  {% endcapture %}
  <title>{{ seo_title }}</title>

  {% if page_description %}
    <meta name="description" content="{{ page_description | escape }}">
  {% endif %}

  {% include 'social-meta-tags' %}

  {% if settings.dark_theme %}
    {{ 'gallery-dark-materialize.min.css' | asset_url | stylesheet_tag }}
  {% else %}
    {{ 'gallery-materialize.min.css' | asset_url | stylesheet_tag }}
  {% endif %}
  {{ 'theme.scss.css' | asset_url | stylesheet_tag }}

  <!-- Lato Font -->
  <link href='https://fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'>

  <!-- Material Icons -->
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

  <script>
    document.documentElement.className = document.documentElement.className.replace('no-js', 'js');

    window.theme = {
      strings: {
        addToCart: {{ 'products.product.add_to_cart' | t | json }},
        soldOut: {{ 'products.product.sold_out' | t | json }},
        unavailable: {{ 'products.product.unavailable' | t | json }}
      },
      moneyFormat: {{ shop.money_format | json }}
    };
  </script>

  {% if template.directory == 'customers' %}
    <!--[if (gt IE 9)|!(IE)]><!--><script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script><!--<![endif]-->
    <!--[if lte IE 9]><script src="{{ 'shopify_common.js' | shopify_asset_url }}"></script><![endif]-->
  {% endif %}

  {{ content_for_header }}
</head>
<body id="{{ page_title | handle }}" class="template-{{ template.name | handle }} {% if settings.dark_theme %} gallery-dark-theme {% endif %}">

  <a class="in-page-link visually-hidden skip-link" href="#MainContent">{{ 'general.accessibility.skip_to_content' | t }}</a>

  {% section 'header' %}

  <main role="main" id="MainContent">
    {{ content_for_layout }}
  </main>

  {% section 'footer' %}


  <!-- Javascript -->

  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>

  {{ 'option_selection.js' | shopify_asset_url | script_tag }}

  {{ 'api.jquery.js' | shopify_asset_url | script_tag }}

  <!--[if (gt IE 9)|!(IE)]><!--><script src="{{ 'vendor.js' | asset_url }}" defer="defer"></script><!--<![endif]-->
  <!--[if lt IE 9]><script src="{{ 'vendor.js' | asset_url }}"></script><![endif]-->

  <!--[if (gt IE 9)|!(IE)]><!--><script src="{{ 'theme.js' | asset_url }}" defer="defer"></script><!--<![endif]-->
  <!--[if lt IE 9]><script src="{{ 'theme.js' | asset_url }}"></script><![endif]-->

  {% if filter_navbar_added %}
    <style>
      .gallery .gallery-item:nth-child(n + {{ pagination_limit | plus: 1 }}) {
        display: none;
      }
    </style>
    <script>
      $(document).ready(function() {
        var pagination_limit = {{ pagination_limit }};
        var $all_products = $('.gallery .gallery-item');
        var $current_products = $all_products;
        var page_max = Math.floor($current_products.length / pagination_limit) + 1;
        var page_number = getUrlParameter('page') || 1;
        var $shown_products = getPaginated($current_products, page_number, pagination_limit);
        var $masonry = $('.gallery');
        $masonry.find('.gallery-item:nth-child(n +'+($shown_products.length+1)+')').remove();
        renderPagination($('.gallery'));

        // Get Url parameter
        function getUrlParameter(sParam) {
          var sPageURL = decodeURIComponent(window.location.search.substring(1)),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

          for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
              return sParameterName[1] === undefined ? true : sParameterName[1];
            }
          }
        }

        // Slice products with respect to pagination
        function getPaginated(products, page, limit) {
          var start = (page - 1) * limit;
          var end = page * limit;
          return products.slice(start, end);
        }

        // Render pagination elements
        function renderPagination(gallery) {
          page_max = Math.floor($current_products.length / pagination_limit) + 1;
          var $pagination = $('<ul class="pagination"></ul>');
          var left = $('<li data-paginate="left"><a><i class="material-icons">chevron_left</i></a></li>');
          var right = $('<li data-paginate="right"><a><i class="material-icons">chevron_right</i></a></li>');

          // Add .container if dark_theme
          if ({{settings.dark_theme}}) {
            $pagination.addClass('container');
          }

          // If only 1 page, don't render
          if (page_max === 1) {
            gallery.next('ul.pagination').remove();
            return;
          }

          if (page_number === 1) {
            left.addClass('disabled');
          } else if (page_number === page_max) {
            right.addClass('disabled');
          }

          $pagination.append(left);
          for (var i = 0; i < page_max; i++) {
            var curr_page_number = i + 1;
            var $page = $('<li data-paginate="' + curr_page_number + '"><a>' + curr_page_number + '</a></li>');
            if (curr_page_number === page_number) {
              $page.addClass('active');
            } else {
              $page.addClass('waves-effect');
            }
            $pagination.append($page);
          }
          $pagination.append(right);

          if (gallery.next('ul.pagination').length) {
            gallery.next('ul.pagination').replaceWith($pagination);
          } else {
            gallery.after($pagination);
          }

          $pagination.find('li:not(.disabled):not(.active)').on('click', function() {
            var data_paginate = $(this).attr('data-paginate');
            if (data_paginate === 'left') {
              changePage(page_number - 1);
            } else if (data_paginate === 'right') {
              changePage(page_number + 1);
            } else {
              changePage(parseInt(data_paginate));
            }
          });
        }

        // Render products, reinit galleryExpand, render pagination
        var renderProducts = function(gallery, added, removed) {
          gallery
            .masonry('remove', removed)
            .masonry('layout');

          gallery
            .append(added)
            .masonry('appended', added)
            .masonry('layout');

          gallery.find('.gallery-expand').galleryExpand({
            onShow: Window.GalleryExpandOnShow,
            dynamicRouting: true
          });

          // Reinit SPR
          if (SPR) {
            SPR.initDomEls();
            SPR.loadBadges();
          }

          renderPagination(gallery);
        };

        // Change page and handle masonry
        var changePage = function(page) {
          page_number = page;
          $shown_products = getPaginated($current_products, page, pagination_limit);

          renderProducts($masonry, $shown_products, $masonry.find('.gallery-item'));
        };

        var categories = $('nav .categories-container');
        if (categories.length) {
          function filterProducts(link) {
            var type_selector = '.gallery-item';

            // Change active of button if not variant (select fields)
            if (link.parent('.categories').attr('data-filter') !== 'variant') {
              link.parent().find('li').removeClass('active');
              link.addClass('active');
            }

            categories.find('.categories').each(function() {
              // Generate type selector for variants (select fields)
              if ($(this).attr('data-filter') === 'variant') {
                var selects = $(this).find('select');
                selects.each(function() {
                  var val = $(this).val();
                  if (val !== 'all') {
                    var filter_type = $(this).attr('name');
                    type_selector += '[data-' + filter_type + '="' + val + '"]';
                  }
                });

              // Generate type selector for everything else (hash based)
              } else {
                var hash = $(this).find('li.active > a').first()[0].hash.substr(1);
                if (hash !== 'all') {
                  var filter_type = $(this).attr('data-filter');
                  type_selector += '[data-' + filter_type + '="' + hash + '"]';
                }
              }
            });

            page_number = 1;
            var $removed_products = $remaining_products = $added_products = $();

            $removed_products = $shown_products.not(type_selector);
            $remaining_products = $shown_products.filter(type_selector);
            $current_products = $all_products.filter(type_selector);
            $shown_products = getPaginated($current_products, page_number, pagination_limit);
            $added_products = $shown_products.not($remaining_products);
            $removed_products = $removed_products.add($remaining_products.not($shown_products));

            renderProducts($masonry, $added_products, $removed_products);
          }

          // Add select onchange handler for variant filters
          if (categories.find('.categories[data-filter="variant"]')) {
            $(document).on('change', '.categories-container .categories select', function(e) {
              filterProducts($(e.target).closest('li'));
            });
          }

          // Add click handler for other filters
          var $links = categories.find('li');
          $links.each(function() {
            var $link = $(this);
            $link.on('click', function() { filterProducts($link); });
          });
        }

      });
    </script>
  {% endif %}

  <script>
    $(document).ready(function() {
      var categories = $('nav .categories-container');
      if (categories.length) {
        categories.pushpin({ top: categories.offset().top });
      }
    });
  </script>

</body>
</html>
